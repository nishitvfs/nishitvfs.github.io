openapi: 3.0.2
info:
  title: VFS eVisa Open API Doc - B2B Channel
  description: Specification for B2B Channel Integration
  contact:
    name: Nishit Salian
    email: nishitsa@vfsglobal.com
  version: "1.0"
servers:
- url: https://vfsglobal.example.com
  description: Mock Server
tags:
  - name: Master Table Management
    description: APIs related to fetching master info
  - name: Group Management
    description: APIs related to creation and updation of group Ids
  - name: Payment Summary
    description: APIs related to fetching payment info for applicant(s)
  - name: OTA
    description: APIs related to OTA operations, provided by VFS
security:
- OAuth2: []
externalDocs:
  description: More context into VFS
  url: https://www.vfsglobal.com/en/individuals/index.html
paths:
  /api/v1/fetchMasters:
    get:
      tags:
        - Master Table Management
      summary: Fetch Masters by type
      description: Fetch Master table info by entering type values
      operationId: fetchMasters
      parameters:
        - name: type
          in: query
          description: Type values that need to be considered for filter
          required: true
          explode: true
          schema:
            type: string
            default: gender
            enum:
              - gender
              - salutation
              - visa-type
              - nationality
              - route
        - name: mission-icao-code
          in: header
          required: true
          description: The ICAO code for the mission. This input will be taken in 'Headers'.
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                   $ref: '#/components/schemas/MasterTableManagement'
              examples:
                gender-data:
                  summary: gender
                  value:
                    status: 200
                    message: Success
                    data:
                      genders:
                        - label: Male
                          id: 1
                        - label: Female
                          id: 2
                        - label: Other
                          id: 3
                    meta:
                      totalCount: 3
                      timestamp: "2024-10-07"
                salutation-data:
                  summary: salutation
                  value:
                    status: 200
                    message: Request successful
                    data:
                      titles:
                        - label: Mr
                          id: 1
                        - label: Miss
                          id: 2
                        - label: Mrs
                          id: 3
                        - label: Master
                          id: 4
                        - label: Ms
                          id: 5
                    meta:
                      totalCount: 5
                      timestamp: "2024-10-07"
                visa-type-data:
                  summary: visa-type
                  value:
                    status: 200
                    message: Success
                    data:
                      visa_type:
                        - type: Standard
                          id: 1
                        - type: Urgent
                          id: 2
                    meta:
                      totalCount: 2
                      timestamp: 2024-10-08
                country-data:
                  summary: nationality
                  value:
                    status: 200
                    message: Success
                    data:
                      country:
                        - name: ETHIOPIA
                          icao_code: ETH
                          id: 1
                        - name: BHUTAN
                          icao_code: BHU
                          id: 2
                        - name: GEORGIA
                          icao_code: GEO
                          id: 3
                        - name: MALTA
                          icao_code: MAL
                          id: 4
                    meta:
                      totalCount: 4
                      timestamp: 2024-10-08
                routes-data:
                  summary: route
                  value:
                    status: 200
                    message: Success
                    data:
                      routes:
                        - route_id: 9
                          mission_id: 12
                          mission_name: AZERBAIJAN
                          country_id: 43
                          country_name: BANGLADESH
                          is_active: true
                          updated_at: "2024-09-20"
                        - route_id: 27
                          mission_id: 13
                          mission_name: FRANCE
                          country_id: 44
                          country_name: INDIA
                          is_active: false
                          updated_at: "2024-09-19"
                    meta:
                      totalCount: 2
                      timestamp: 2024-10-08     
        400:
          description: Invalid request. Please check the request parameters and try again.
        401:
          description: Authorization required. Please provide valid credentials.
        403:
          description: Forbidden. Your credentials do not grant access to this resource.
        404:
          description: Resource not available. Please check the URL or request parameters.
        500:
          description: The server encountered an unexpected condition that prevented it from fulfilling the request.  
      security:
        - OAuth2: []
  /api/v1/groups:
    post:
      tags:
        - Group Management
      summary: Create a new group ID for applicants
      description: Creates a new group ID for the specified number of applicants.
      security:
        - OAuth2: []
      requestBody:
        description: Number of applicants for the group.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                applicantCount:
                  type: integer
                  description: The number of applicants in the group.
                  example: 5
              required:
                - applicantCount
      responses:
        '201':
          description: Group ID successfully created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  groupId:
                    type: string
                    description: The unique identifier for the created group.
                    example: idn-168378-nkdkls
                  applicantCount:
                    type: integer
                    description: The number of applicants in the group.
                    example: 5
        '400':
          description: Bad request. Invalid input.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid applicant count.
  /api/v1/groups/{groupId}:
    patch:
      tags:
        - Group Management
      summary: Update the applicant count for an existing group ID
      description: Updates the number of applicants associated with a specific group ID.
      security:
        - OAuth2: []
      parameters:
        - name: groupId
          in: path
          required: true
          description: The unique identifier of the group.
          schema:
            type: string
            example: idn-168378-nkdkls
      requestBody:
        description: Updated applicant count for the group.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                applicantCount:
                  type: integer
                  description: The updated number of applicants in the group.
                  example: 6
              required:
                - applicantCount
      responses:
        '200':
          description: Group ID successfully updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  groupId:
                    type: string
                    description: The unique identifier of the group.
                    example: idn-168378-nkdkls
                  applicantCount:
                    type: integer
                    description: The updated number of applicants in the group.
                    example: 6
        '404':
          description: Group ID not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Group ID not found.
        '400':
          description: Bad request. Invalid input.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid applicant count.                  
  /api/v1/fetchPaymentInfo:
      get:
        tags:
        - Payment Summary
        summary: Approach 1 - Fetch Payment Info for applications 
        description: This API fetches payment information for given application IDs.
        parameters:
          - name: vfsGroupId
            in: query
            required: true
            schema:
              type: string
              example: "efgh-lkusm-12345"
        operationId: paymentSummaryv1
        responses:
          200:
            description: Successful response with an array of items
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    totalApplications:
                      type: integer
                      example: 2
                    vfsGroupId:
                      type: string
                      example: "efgh-lkusm-12345"
                    applications:
                      type: array
                      items:
                        $ref: '#/components/schemas/PaymentResponse'
                      example:
                        - applicationId: "12345"
                          applicantId: "9987"
                          paymentInfo:
                            - visaFeeBase: 100.00
                              visaFeeAdditional: 0
                              totalVisaFee: 100.00
                              vfsServiceFeeBase: 40.00
                              vfsAdditionalServicesFee: 0.00
                              totalVfsServiceFee: 40.00
                              discountApplied: No
                              discountAmount: 0.00
                              currency: USD
                              paymentBreakdown:
                                - visaFee: 100.00
                                  vfsserviceFee: 40.00
                                  discount: 0.00
                                  taxes: 0.00
                        - applicationId: "12345"
                          applicantId: "9988"
                          paymentInfo:
                            - visaFeeBase: 80.00
                              visaFeeAdditional: 0
                              totalVisaFee: 80.00
                              vfsServiceFeeBase: 25.00
                              vfsAdditionalServicesFee: 0.00
                              totalVfsServiceFee: 25.00
                              discountApplied: Yes
                              discountAmount: 10.00
                              currency: USD
                              paymentBreakdown:
                                - visaFee: 80.00
                                  vfsserviceFee: 25.00
                                  discount: 10.00
                                  taxes: 0.00
                    paymentSummary:
                      type: object
                      properties:
                        visaFee:
                          type: number
                          example: 180
                        vfsserviceFee:
                          type: number
                          example: 65
                        discount:
                          type: number
                          example: 10
                        taxes:
                          type: number
                          example: 0
                        currency:
                          type: string
                          example: USD
                        totalAmountPayable:
                          type: number
                          example: 235
          400:
            description: Invalid request. Please check the request parameters and try again.
          401:
            description: Authorization required. Please provide valid credentials.
          403:
            description: Forbidden. Your credentials do not grant access to this resource.
          404:
            description: Resource not available. Please check the URL or request parameters.
          500:
            description: The server encountered an unexpected condition that prevented it from fulfilling the request.    
  /api/v1/getVAFChecklist:
    get:
      summary: Fetch Checklist and VAF Fields 
      description: API for fetching document checklist and VAF fields for specific routes entered by user.
      operationId: fetchChecklistAndVAF
      tags: 
      - Master Table Management
      parameters:
        - name: route_id
          in: query
          required: true
          description: The ID of the route for which to fetch the checklist.
          schema:
            type: integer
      responses:
        '200':
          description: Successful response with document checklist and VAF fields.
          content:
            application/json:
              schema:
                type: object
                properties:
                  route_id:
                    type: integer
                    example: 190
                  documents_checklist:
                    type: array
                    items:
                      type: object
                      properties:
                        doc_id:
                          type: integer
                          example: 28
                        doc_type:
                          type: string
                          example: "photograph"
                        description:
                          type: string
                          example: "Recent passport-sized photograph with white background."
                        size_restriction:
                          type: string
                          example: "2 MB"
                        is_mandatory:
                          type: boolean
                          example: true
                  vaf_checklist:
                    type: array
                    items:
                      type: object
                      properties:
                        field_id:
                          type: integer
                          example: 425
                        field_name:
                          type: string
                          example: "date_of_birth"
                        description:
                          type: string
                          example: "Applicant's birth date. Mandatory field."
                        field_status:
                          type: string
                          example: "present"
                        incorrect_format:
                          type: boolean
                          example: true
                        validation_remarks:
                          type: object
                          properties:
                            format:
                              type: string
                              example: "DD/MM/YYYY"
                            context:
                              type: string
                              example: "Please ensure this is filled in the correct format."
        '400':
          description:   Invalid request. Please check the request parameters and try again.
        '404':
          description: Route not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      route_id:
                        type: integer
                        example: 73
                      message:
                        type: string
                        example: "Route not found"
                      details:
                        type: string
                        example: "No checklist available for the provided route ID."
  /api/v1/ota/fetchQCRemarks:
    get:
      tags:
        - OTA
      summary: Fetch QC Remarks
      description: Retrieves quality control remarks for a specific VFS application based on the provided application ID.
      parameters:
        - name: vfsGroupId
          in: query
          required: true
          description: The unique ID of the VFS application.
          schema:
            type: string
        - name: mission-icao-code
          in: header
          required: true
          description: The ICAO code for the mission. This input will be taken in 'Headers'.
          schema:
            type: string
      responses:
        '200':
          description: Successful response containing QC remarks.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QCRemarksResponse'
              example:
                - vfsGroupId: eksld-394u93-nkdksl
                  totalApplications: 3
                  QCRemarks:
                    - vfsApplicationId: 12345
                      remarks: Please provide a passport-sized photograph with a white background.
                      status: Rejected
                      createdAt: 2024-10-01
                    - vfsApplicationId: 67890
                      remarks: Please provide a clear passport bio page. Uploaded file is blurry
                      status: Rejected
                      createdAt: 2024-10-01
                    - vfsApplicationId: 97527
                      remarks: null
                      status: Approved
                      createdAt: 2024-10-01
              
        '400':
          description: Bad Request, e.g., missing required parameter.
        '404':
          description: Not Found, e.g., application ID does not exist.
        '500':
          description: Internal Server Error.
  /api/v1/ota/fetchVisaStatus:
    get:
      summary: Fetch visa statuses for a VFS group
      description: Retrieves visa statuses for all applications under a specified VFS group ID.
      tags:
        - OTA
      security:
        - OAuth2: []
      parameters:
        - name: vfsGroupId
          in: query
          description: The unique identifier for the VFS group.
          required: true
          schema:
            $ref: '#/components/schemas/VfsGroupId'
      responses:
        '200':
          description: List of visa statuses for the specified VFS group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VisaStatusResponse'
        '400':
          description: Bad request due to invalid input or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized. Invalid or missing OAuth token.
        '404':
          description: VFS group ID not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    MasterTableManagement:
      type: object
      properties:
        status:
          type: integer
          format: int32
          example: 200
          description: "HTTP status code of the response."
        message:
          type: string
          example: "Success"
          description: "Message indicating the status of the operation."
        data:
          type: object
          properties:
            specific_master_type:
              type: array
              description: "List of options for specific master type entered."
              items:
                type: object
                properties:
                  label:
                    type: string
                    example: "Male"
                    description: "Label for the gender."
                  id:
                    type: integer
                    format: int32
                    example: 1
                    description: "Unique identifier for the gender."
        meta:
          type: object
          properties:
            totalCount:
              type: integer
              format: int32
              example: 3
              description: "Total number of gender entries."
            timestamp:
              type: string
              format: date-time
              example: "2024-10-07"
              description: "Timestamp of the response in ISO 8601 format."
    PaymentResponse:
      type: object
      properties:
        totalApplications:
          type: integer
          example: 2
        vfsGroupId:
          type: string
          example: "efgh-lkusm-12345"
        applications:
          type: array
          items:
            type: object
            properties:
              applicationId:
                type: string
                example: "12345"
              applicantId:
                type: string
                example: "9987"
              paymentInfo:
                type: array
                items:
                  type: object
                  properties:
                    visaFeeBase:
                      type: number
                      example: 100
                    visaFeeAdditional:
                      type: number
                      example: 0
                    totalVisaFee:
                      type: number
                      example: 100
                    vfsServiceFeeBase:
                      type: number
                      example: 40
                    vfsAdditionalServicesFee:
                      type: number
                      example: 0
                    totalVfsServiceFee:
                      type: number
                      example: 40
                    discountApplied:
                      type: string
                      example: "No"
                    discountAmount:
                      type: number
                      example: 0
                    currency:
                      type: string
                      example: "USD"
                    paymentBreakdown:
                      type: array
                      items:
                        type: object
                        properties:
                          visaFee:
                            type: number
                            example: 100
                          vfsserviceFee:
                            type: number
                            example: 40
                          discount:
                            type: number
                            example: 0
                          taxes:
                            type: number
                            example: 0
        paymentSummary:
          type: object
          properties:
            visaFee:
              type: number
              example: 180
            vfsserviceFee:
              type: number
              example: 65
            discount:
              type: number
              example: 10
            taxes:
              type: number
              example: 0
            currency:
              type: string
              example: "USD"
            totalAmountPayable:
              type: number
              example: 235
    QCRemarksResponse:
      type: object
      properties:
        vfsGroupId:
          type: string
          example: "eksld-394u93-nkdksl"
        totalApplications:
          type: integer
          example: 3
        ApplicationRemarks:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationRemarks'
    ApplicationRemarks:
      type: object
      properties:
        vfsApplicationId:
          type: integer
          example: 12345
        remarks:
         type: string
         example: "Need passport-sized photograph"
        status:
          type: string
          example: "Rejected"
        createdAt:
          type: string
          format: date-time
          example: "2024-10-01"
    VfsGroupId:
      type: string
      description: Unique identifier for the VFS group.
      example: mmt-203949457

    VisaStatusResponse:
      type: array
      items:
        type: object
        properties:
          vfsGroupId:
            type: string
            description: Unique identifier for the VFS group.
            example: mmt-203949457
          totalApplications:
            type: integer
            description: Total number of applications in the group.
            example: 3
          visaStatus:
            type: array
            description: List of visa application statuses.
            items:
              type: object
              properties:
                vfsGroupId:
                  type: string
                  description: Unique identifier for a specific visa application.
                  example: mmt20394945701
                visaStatus:
                  type: string
                  description: Current status of the visa application.
                  enum: [Approved, Rejected, Pending]
                  example: Approved
                remarks:
                  type: string
                  description: Remarks related to the visa status.
                  example: Docs insufficient
                updatedAt:
                  type: string
                  format: date-time
                  description: Last update timestamp for the visa application status.
                  example: '2024-10-20T00:13:21Z'
    ErrorResponse:
      type: object
      properties:
        code:
          type: integer
          example: 400
        message:
          type: string
          example: "Invalid request parameters."      
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://auth.example.com/oauth/token
          scopes:
            read: Grants read access
            write: Grants write access
